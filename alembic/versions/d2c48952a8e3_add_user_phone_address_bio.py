"""Add user phone, address, bio fields

Revision ID: d2c48952a8e3
Revises: c2c48952a8e2
Create Date: 2025-05-28 07:26:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd2c48952a8e3'
down_revision: Union[str, None] = '3b7db85088f8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('phone', sa.String(), nullable=True))
    op.add_column('user', sa.Column('address', sa.String(), nullable=True))
    op.add_column('user', sa.Column('bio', sa.String(), nullable=True))
    
    # Actualizar registros existentes con valores por defecto
    op.execute("UPDATE \"user\" SET phone = 'No especificado' WHERE phone IS NULL")
    op.execute("UPDATE \"user\" SET address = 'No especificado' WHERE address IS NULL")
    op.execute("UPDATE \"user\" SET bio = 'No especificado' WHERE bio IS NULL")
    
    # Hacer los campos no-nullable despuÃ©s de actualizar los registros existentes
    op.alter_column('user', 'phone', nullable=False)
    op.alter_column('user', 'address', nullable=False)
    op.alter_column('user', 'bio', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'bio')
    op.drop_column('user', 'address')
    op.drop_column('user', 'phone')
    # ### end Alembic commands ###
